<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="13" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="3784166" started-at="2019-08-24T10:55:14Z" finished-at="2019-08-24T11:58:18Z">
    <groups>
    </groups>
    <test name="Login guru on Chrome" duration-ms="3784166" started-at="2019-08-24T10:55:14Z" finished-at="2019-08-24T11:58:18Z">
      <class name="BankGuruTestcases.EditCustomerScript">
        <test-method status="PASS" signature="BeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="BeforeClass" is-config="true" duration-ms="9541" started-at="2019-08-24T17:55:42Z" finished-at="2019-08-24T17:55:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.47]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://demo.guru99.com/v4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="BeforeMethod" is-config="true" duration-ms="2169" started-at="2019-08-24T17:55:51Z" finished-at="2019-08-24T17:55:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_01_EditAddress()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="TC_01_EditAddress" duration-ms="1404" started-at="2019-08-24T17:55:53Z" finished-at="2019-08-24T17:55:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_01_EditAddress -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2019-08-24T17:55:55Z" finished-at="2019-08-24T17:55:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_01_EditAddress status=SUCCESS method=EditCustomerScript.TC_01_EditAddress()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="BeforeMethod" is-config="true" duration-ms="1718" started-at="2019-08-24T17:55:55Z" finished-at="2019-08-24T17:55:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_02_EditCity()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="TC_02_EditCity" duration-ms="1474" started-at="2019-08-24T17:55:57Z" finished-at="2019-08-24T17:55:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_02_EditCity -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2019-08-24T17:55:58Z" finished-at="2019-08-24T17:55:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_02_EditCity status=SUCCESS method=EditCustomerScript.TC_02_EditCity()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="BeforeMethod" is-config="true" duration-ms="1698" started-at="2019-08-24T17:55:58Z" finished-at="2019-08-24T17:56:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_03_EditState()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="TC_03_EditState" duration-ms="2207" started-at="2019-08-24T17:56:00Z" finished-at="2019-08-24T17:56:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_03_EditState -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2019-08-24T17:56:02Z" finished-at="2019-08-24T17:56:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_03_EditState status=SUCCESS method=EditCustomerScript.TC_03_EditState()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="BeforeMethod" is-config="true" duration-ms="1925" started-at="2019-08-24T17:56:02Z" finished-at="2019-08-24T17:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_04_EditPin()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="TC_04_EditPin" duration-ms="1694" started-at="2019-08-24T17:56:04Z" finished-at="2019-08-24T17:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_04_EditPin -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="BeforeMethod" is-config="true" duration-ms="1672" started-at="2019-08-24T17:56:06Z" finished-at="2019-08-24T17:56:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2019-08-24T17:56:06Z" finished-at="2019-08-24T17:56:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_04_EditPin status=SUCCESS method=EditCustomerScript.TC_04_EditPin()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="TC_05_EditPhone()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="TC_05_EditPhone" duration-ms="2198" started-at="2019-08-24T17:56:07Z" finished-at="2019-08-24T17:56:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_05_EditPhone -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2019-08-24T17:56:09Z" finished-at="2019-08-24T17:56:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_05_EditPhone status=SUCCESS method=EditCustomerScript.TC_05_EditPhone()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="BeforeMethod" is-config="true" duration-ms="1593" started-at="2019-08-24T17:56:09Z" finished-at="2019-08-24T17:56:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="FAIL" signature="TC_06_EditEmail()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="TC_06_EditEmail" duration-ms="83879" started-at="2019-08-24T17:56:11Z" finished-at="2019-08-24T17:57:35Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: Unable to receive message from renderer
  (Session info: chrome=76.0.3809.100)
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'LAPTOP-4MO39718', ip: '192.168.1.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 76.0.3809.100, chrome: {chromedriverVersion: 76.0.3809.25 (a0c95f440512e..., userDataDir: C:\Users\DUYEND~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:59514}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9d872556e677fb6bd76da748bc7ee951]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: Unable to receive message from renderer
  (Session info: chrome=76.0.3809.100)
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'LAPTOP-4MO39718', ip: '192.168.1.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 76.0.3809.100, chrome: {chromedriverVersion: 76.0.3809.25 (a0c95f440512e..., userDataDir: C:\Users\DUYEND~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:59514}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9d872556e677fb6bd76da748bc7ee951
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy12.click(Unknown Source)
	at commonPage.CommonFunctions.click(CommonFunctions.java:52)
	at bankGuruActions.EditCustomerPage.clickSubmitEditCustomer(EditCustomerPage.java:121)
	at BankGuruTestcases.EditCustomerScript.TC_06_EditEmail(EditCustomerScript.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_06_EditEmail -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2019-08-24T17:57:35Z" finished-at="2019-08-24T17:57:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_06_EditEmail status=FAILURE method=EditCustomerScript.TC_06_EditEmail()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:BankGuruTestcases.EditCustomerScript@1b604f19]" name="AfterClass" is-config="true" duration-ms="727" started-at="2019-08-24T17:57:35Z" finished-at="2019-08-24T17:57:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- BankGuruTestcases.EditCustomerScript -->
      <class name="BankGuruTestcases.NewAccountScript">
        <test-method status="PASS" signature="BeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:BankGuruTestcases.NewAccountScript@4b9e13df]" name="BeforeClass" is-config="true" duration-ms="3637773" started-at="2019-08-24T17:57:36Z" finished-at="2019-08-24T18:58:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.47]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://demo.guru99.com/v4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.NewAccountScript@4b9e13df]" name="BeforeMethod" is-config="true" duration-ms="1344" started-at="2019-08-24T18:58:13Z" finished-at="2019-08-24T18:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_01_CustomerIDCannotBlank()[pri:0, instance:BankGuruTestcases.NewAccountScript@4b9e13df]" name="TC_01_CustomerIDCannotBlank" duration-ms="192" started-at="2019-08-24T18:58:15Z" finished-at="2019-08-24T18:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_01_CustomerIDCannotBlank -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.NewAccountScript@4b9e13df]" name="BeforeMethod" is-config="true" duration-ms="500" started-at="2019-08-24T18:58:15Z" finished-at="2019-08-24T18:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="FAIL" signature="TC_02_InitialDepositCannotBlank()[pri:0, instance:BankGuruTestcases.NewAccountScript@4b9e13df]" name="TC_02_InitialDepositCannotBlank" duration-ms="231" started-at="2019-08-24T18:58:16Z" finished-at="2019-08-24T18:58:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Initial Deposit must not be blank] but found [Customer ID is required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Initial Deposit must not be blank] but found [Customer ID is required]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at commonPage.CommonTestcases.verifyEqual(CommonTestcases.java:103)
	at BankGuruTestcases.NewAccountScript.TC_02_InitialDepositCannotBlank(NewAccountScript.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_02_InitialDepositCannotBlank -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.NewAccountScript@4b9e13df]" name="BeforeMethod" is-config="true" duration-ms="558" started-at="2019-08-24T18:58:16Z" finished-at="2019-08-24T18:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_03_CanCreateNewAccount()[pri:0, instance:BankGuruTestcases.NewAccountScript@4b9e13df]" name="TC_03_CanCreateNewAccount" duration-ms="1675" started-at="2019-08-24T18:58:16Z" finished-at="2019-08-24T18:58:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_03_CanCreateNewAccount -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:BankGuruTestcases.NewAccountScript@4b9e13df]" name="AfterClass" is-config="true" duration-ms="0" started-at="2019-08-24T18:58:18Z" finished-at="2019-08-24T18:58:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- BankGuruTestcases.NewAccountScript -->
      <class name="BankGuruTestcases.RegisterScript">
        <test-method status="PASS" signature="beforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:BankGuruTestcases.RegisterScript@2b98378d]" name="beforeClass" is-config="true" duration-ms="11677" started-at="2019-08-24T17:55:14Z" finished-at="2019-08-24T17:55:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.47]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://demo.guru99.com/v4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="getAccountRegister()[pri:0, instance:BankGuruTestcases.RegisterScript@2b98378d]" name="getAccountRegister" duration-ms="1448" started-at="2019-08-24T17:55:25Z" finished-at="2019-08-24T17:55:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAccountRegister -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:BankGuruTestcases.RegisterScript@2b98378d]" name="afterClass" is-config="true" duration-ms="664" started-at="2019-08-24T17:55:27Z" finished-at="2019-08-24T17:55:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- BankGuruTestcases.RegisterScript -->
      <class name="BankGuruTestcases.NewCustomerScript">
        <test-method status="PASS" signature="BeforeClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="BeforeClass" is-config="true" duration-ms="9707" started-at="2019-08-24T17:55:28Z" finished-at="2019-08-24T17:55:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.47]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://demo.guru99.com/v4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="TC_01_CustomerCannotBlank()[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="TC_01_CustomerCannotBlank" duration-ms="217" started-at="2019-08-24T17:55:37Z" finished-at="2019-08-24T17:55:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_01_CustomerCannotBlank -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-24T17:55:37Z" finished-at="2019-08-24T17:55:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="AfterMethod" is-config="true" duration-ms="6" started-at="2019-08-24T17:55:38Z" finished-at="2019-08-24T17:55:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_01_CustomerCannotBlank status=SUCCESS method=NewCustomerScript.TC_01_CustomerCannotBlank()[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-24T17:55:38Z" finished-at="2019-08-24T17:55:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="TC_02_DateFieldCannotBlank()[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="TC_02_DateFieldCannotBlank" duration-ms="150" started-at="2019-08-24T17:55:38Z" finished-at="2019-08-24T17:55:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_02_DateFieldCannotBlank -->
        <test-method status="PASS" signature="TC_03_SignUpNewCustomer()[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="TC_03_SignUpNewCustomer" duration-ms="3164" started-at="2019-08-24T17:55:38Z" finished-at="2019-08-24T17:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_03_SignUpNewCustomer -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-24T17:55:38Z" finished-at="2019-08-24T17:55:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2019-08-24T17:55:38Z" finished-at="2019-08-24T17:55:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_02_DateFieldCannotBlank status=SUCCESS method=NewCustomerScript.TC_02_DateFieldCannotBlank()[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2019-08-24T17:55:41Z" finished-at="2019-08-24T17:55:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_03_SignUpNewCustomer status=SUCCESS method=NewCustomerScript.TC_03_SignUpNewCustomer()[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:BankGuruTestcases.NewCustomerScript@cb5822]" name="AfterClass" is-config="true" duration-ms="924" started-at="2019-08-24T17:55:41Z" finished-at="2019-08-24T17:55:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- BankGuruTestcases.NewCustomerScript -->
    </test> <!-- Login guru on Chrome -->
  </suite> <!-- Suite -->
</testng-results>
